{"version":3,"sources":["view/main/styles.tsx","constant.ts","component/asset-list/styles.tsx","component/slider/styles.tsx","component/slider/index.tsx","component/asset-list/index.tsx","component/result/styles.tsx","component/result/index.tsx","view/main/index.tsx","App.tsx","component/global-style/index.tsx","reportWebVitals.ts","index.tsx"],"names":["Layout","styled","div","Contents","ResultContainer","AssetListContainer","Title","BoxContainer","Box","props","isSelected","ImageSlice","src","index","hue","sat","bri","fadein","keyframes","RangeInput","input","Slider","type","setColor","defaultValue","onChange","e","Number","target","value","hueHandleChange","satHandleChange","briHandleChange","AssetList","count","title","char","setChar","color","focus","updateFocus","onClick","Array","map","n","i","boxClick","process","Parts","Result","Main","useState","updateChar","updateColor","r","reRender","c","h","s","l","App","GlobalStyle","createGlobalStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3144c085.chunk.js","sourcesContent":["import styled from \"styled-components/macro\";\r\nimport { BREAKPOINT } from \"../../constant\";\r\n\r\nexport const Layout = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: #e6a0a0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Contents = styled.div`\r\n  width: 100%;\r\n  max-width: 36rem;\r\n  max-height: 100vh;\r\n  background: #e6a0a0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  @media screen and (min-width: ${BREAKPOINT}px) {\r\n    max-width: 72rem;\r\n    flex-direction: row;\r\n  } //이건 출시할땐 지우자.\r\n`;\r\n\r\nexport const ResultContainer = styled.div`\r\n  width: 36rem;\r\n  height: 36rem;\r\n  background: #fff;\r\n`;\r\n\r\nexport const AssetListContainer = styled.div`\r\n  width: 36rem;\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar {\r\n    width: 1px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    display: none;\r\n  }\r\n`;\r\n","export const BREAKPOINT = 640;\r\n","import styled, { css, keyframes } from \"styled-components/macro\";\r\n\r\nexport const Layout = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 3rem;\r\n  //font-weight: 700;\r\n  font-size: 1.4rem;\r\n  background-color: #ddd;\r\n`;\r\n\r\nexport const BoxContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: #eee;\r\n`;\r\n\r\ninterface BoxProps {\r\n  isSelected: boolean;\r\n}\r\n\r\nexport const Box = styled.div<BoxProps>`\r\n  width: 6rem;\r\n  height: 6rem;\r\n  background-color: ${(props) => (props.isSelected ? \"#9af367\" : \"white\")};\r\n  /* border: 5px solid #777;\r\n  margin-right: -5px;\r\n  margin-bottom: -5px; */\r\n`;\r\n\r\ninterface ImageSliceProps {\r\n  index: number;\r\n  src: string;\r\n  hue: number;\r\n  sat: number;\r\n  bri: number;\r\n}\r\n\r\nexport const ImageSlice = styled.div<ImageSliceProps>`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.src});\r\n  background-position: calc(0px - 60px * ${(props) => props.index});\r\n  filter: hue-rotate(calc(${(props) => props.hue} * 3.6deg)) saturate(calc(${(props) => props.sat}% * 2))\r\n    brightness(calc(${(props) => props.bri}% * 2)) contrast(calc(max(200% - ${(props) => props.bri}% * 2, 100%)));\r\n`;\r\n","import styled, { css, keyframes } from \"styled-components/macro\";\r\n\r\nconst fadein = keyframes`\r\n  0% { top: 0px; opacity: 0; } \r\n  100% { top: -30px; opacity: 1; }\r\n`;\r\n\r\nexport const Layout = styled.div`\r\n  width: 100%;\r\n  height: 7rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: pink;\r\n`;\r\n\r\ninterface SliderProps {\r\n  index: string;\r\n  hue?: number;\r\n}\r\n\r\nexport const RangeInput = styled.input<SliderProps>`\r\n  animation: ${fadein} 0.5s;\r\n  width: 90%;\r\n  -webkit-appearance: none;\r\n  background: transparent;\r\n  outline: none;\r\n  ::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: 1.4rem;\r\n    margin-top: -0.2rem;\r\n    width: 0.5rem;\r\n    background-color: white;\r\n    cursor: pointer;\r\n  }\r\n  ::-webkit-slider-runnable-track {\r\n    width: 100%;\r\n    height: 1rem;\r\n    background: ${(props) =>\r\n      props.index === \"hue\"\r\n        ? `linear-gradient(\r\n        90deg,\r\n        rgba(255, 0, 0, 1) 0%,\r\n        rgba(255, 154, 0, 1) 10%,\r\n        rgba(208, 222, 33, 1) 20%,\r\n        rgba(79, 220, 74, 1) 30%,\r\n        rgba(63, 218, 216, 1) 40%,\r\n        rgba(47, 201, 226, 1) 50%,\r\n        rgba(28, 127, 238, 1) 60%,\r\n        rgba(95, 21, 242, 1) 70%,\r\n        rgba(186, 12, 248, 1) 80%,\r\n        rgba(251, 7, 217, 1) 90%,\r\n        rgba(255, 0, 0, 1) 100%\r\n    )`\r\n        : props.index === \"sat\"\r\n        ? `linear-gradient(\r\n        90deg,\r\n        hsl(calc(${props.hue} * 3.6), 0%, 50%) 0%,\r\n        hsl(calc(${props.hue} * 3.6), 100%, 50%) 100%\r\n    )`\r\n        : `linear-gradient(\r\n        90deg,\r\n        hsl(calc(${props.hue} * 3.6), 100%, 0%) 0%,\r\n        hsl(calc(${props.hue} * 3.6), 100%, 50%) 50%,\r\n        hsl(calc(${props.hue} * 3.6), 100%, 100%) 100%\r\n    )`};\r\n  }\r\n`;\r\n\r\nexport const StyledThumb = styled.div`\r\n  height: 1rem;\r\n  line-height: 1rem;\r\n  width: 1rem;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: 50%;\r\n  cursor: grab;\r\n  transition: 0.1s;\r\n  outline: none;\r\n`;\r\n\r\nexport const StyledTrack = styled.div`\r\n  width: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  background: red;\r\n`;\r\n\r\n/**/\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface SliderProps {\r\n  type: number;\r\n  hue: number;\r\n  sat: number;\r\n  bri: number;\r\n  setColor: (type: number, h: number, s: number, l: number) => void;\r\n}\r\n\r\nfunction Slider({ type, hue, sat, bri, setColor }: SliderProps) {\r\n  const hueHandleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setColor(type, Number(e.target.value), sat, bri);\r\n  };\r\n  const satHandleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setColor(type, hue, Number(e.target.value), bri);\r\n  };\r\n  const briHandleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setColor(type, hue, sat, Number(e.target.value));\r\n  };\r\n  return (\r\n    <>\r\n      <S.Layout>\r\n        <S.RangeInput type=\"range\" defaultValue={hue} index=\"hue\" onChange={(e) => hueHandleChange(e)} />\r\n        <S.RangeInput type=\"range\" defaultValue={sat} index=\"sat\" hue={hue} onChange={(e) => satHandleChange(e)} />\r\n        <S.RangeInput type=\"range\" defaultValue={bri} index=\"bri\" hue={hue} onChange={(e) => briHandleChange(e)} />\r\n      </S.Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as S from \"./styles\";\r\n\r\nimport Slider from \"../slider\";\r\n\r\ninterface AssetListProps {\r\n  count: number;\r\n  title: string;\r\n  type: number;\r\n  char: number[];\r\n  setChar: (type: number, i: number) => void;\r\n  color: number[][];\r\n  setColor: (type: number, h: number, s: number, l: number) => void;\r\n  focus: number;\r\n  updateFocus: (n: number) => void;\r\n}\r\n\r\nfunction AssetList({ count, type, title, char, setChar, color, setColor, focus, updateFocus }: AssetListProps) {\r\n  const boxClick = (i: number) => {\r\n    setChar(type, i);\r\n  };\r\n  const listClick = () => {\r\n    updateFocus(type);\r\n  };\r\n  return (\r\n    <>\r\n      <S.Layout onClick={(e) => listClick()}>\r\n        <S.Title>{title}</S.Title>\r\n        <S.BoxContainer>\r\n          {[...Array(count)].map((n, i) => (\r\n            <S.Box isSelected={char[type] === i} onClick={(e) => boxClick(i)} key={i}>\r\n              <S.ImageSlice\r\n                src={`${process.env.PUBLIC_URL}/assets/${type}.png`}\r\n                index={i}\r\n                key={i}\r\n                hue={color[type][0]}\r\n                sat={color[type][1]}\r\n                bri={color[type][2]}\r\n              />\r\n            </S.Box>\r\n          ))}\r\n        </S.BoxContainer>\r\n        {type === focus && (\r\n          <Slider type={type} hue={color[type][0]} sat={color[type][1]} bri={color[type][2]} setColor={setColor} />\r\n        )}\r\n      </S.Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AssetList;\r\n","import styled, { css } from \"styled-components/macro\";\r\n\r\nexport const Layout = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const BoxContainer = styled.div`\r\n  position: relative;\r\n  width: 6rem;\r\n  height: 6rem;\r\n`;\r\n\r\ninterface PartsProps {\r\n  index: number;\r\n  src: string;\r\n  hue: number;\r\n  sat: number;\r\n  bri: number;\r\n}\r\n\r\nexport const Parts = styled.div<PartsProps>`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background-image: url(${(props) => props.src});\r\n  background-repeat: no-repeat;\r\n  background-position: calc(0px - 60px * ${(props) => props.index});\r\n  filter: hue-rotate(calc(${(props) => props.hue} * 3.6deg)) saturate(calc(${(props) => props.sat}% * 2))\r\n    brightness(calc(${(props) => props.bri}% * 2)) contrast(calc(max(200% - ${(props) => props.bri}% * 2, 100%)));\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface ResultProps {\r\n  count: number;\r\n  char: number[];\r\n  color: number[][];\r\n}\r\n\r\nfunction Result({ count, char, color }: ResultProps) {\r\n  return (\r\n    <>\r\n      <S.Layout>\r\n        <S.BoxContainer>\r\n          {[...Array(count)].map((n, i) => (\r\n            <S.Parts\r\n              src={`${process.env.PUBLIC_URL}/assets/${i}.png`}\r\n              index={char[i]}\r\n              key={i}\r\n              hue={color[i][0]}\r\n              sat={color[i][1]}\r\n              bri={color[i][2]}\r\n            />\r\n          ))}\r\n        </S.BoxContainer>\r\n      </S.Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as S from \"./styles\";\r\n\r\nimport AssetList from \"../../component/asset-list\";\r\nimport Result from \"../../component/result\";\r\n\r\nfunction Main() {\r\n  const [char, updateChar] = useState([0, 0, 0, 0]);\r\n  const [color, updateColor] = useState([\r\n    [0, 50, 50],\r\n    [0, 50, 50],\r\n    [0, 50, 50],\r\n    [0, 50, 50],\r\n    [0, 50, 50],\r\n    [0, 50, 50],\r\n  ]);\r\n  const [focus, updateFocus] = useState(0);\r\n  const [r, reRender] = useState(false);\r\n  const setChar = (type: number, i: number) => {\r\n    let c = char;\r\n    c[type] = i;\r\n    updateChar(c);\r\n    reRender(!r);\r\n  };\r\n  const setColor = (type: number, h: number, s: number, l: number) => {\r\n    let c = color;\r\n    let n = [h, s, l];\r\n    c[type] = n;\r\n    updateColor(c);\r\n    reRender(!r);\r\n  };\r\n  return (\r\n    <>\r\n      <S.Layout>\r\n        <S.Contents>\r\n          <S.ResultContainer>\r\n            <Result count={6} char={char} color={color} />\r\n          </S.ResultContainer>\r\n          <S.AssetListContainer>\r\n            <AssetList\r\n              count={1}\r\n              title=\"피부\"\r\n              type={0}\r\n              key={0}\r\n              char={char}\r\n              setChar={setChar}\r\n              color={color}\r\n              setColor={setColor}\r\n              focus={focus}\r\n              updateFocus={updateFocus}\r\n            />\r\n            <AssetList\r\n              count={3}\r\n              title=\"볼\"\r\n              type={1}\r\n              key={1}\r\n              char={char}\r\n              setChar={setChar}\r\n              color={color}\r\n              setColor={setColor}\r\n              focus={focus}\r\n              updateFocus={updateFocus}\r\n            />\r\n            <AssetList\r\n              count={2}\r\n              title=\"눈\"\r\n              type={2}\r\n              key={2}\r\n              char={char}\r\n              setChar={setChar}\r\n              setColor={setColor}\r\n              color={color}\r\n              focus={focus}\r\n              updateFocus={updateFocus}\r\n            />\r\n            <AssetList\r\n              count={3}\r\n              title=\"눈썹\"\r\n              type={3}\r\n              key={3}\r\n              char={char}\r\n              setChar={setChar}\r\n              setColor={setColor}\r\n              color={color}\r\n              focus={focus}\r\n              updateFocus={updateFocus}\r\n            />\r\n            <AssetList\r\n              count={3}\r\n              title=\"입\"\r\n              type={4}\r\n              key={4}\r\n              char={char}\r\n              setChar={setChar}\r\n              setColor={setColor}\r\n              color={color}\r\n              focus={focus}\r\n              updateFocus={updateFocus}\r\n            />\r\n            <AssetList\r\n              count={5}\r\n              title=\"머리\"\r\n              type={5}\r\n              key={5}\r\n              char={char}\r\n              setChar={setChar}\r\n              setColor={setColor}\r\n              color={color}\r\n              focus={focus}\r\n              updateFocus={updateFocus}\r\n            />\r\n          </S.AssetListContainer>\r\n        </S.Contents>\r\n      </S.Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport Main from \"./view/main\";\n\nfunction App() {\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components/macro\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'NanumSquare', sans-serif;\r\n    font-display: 'block';\r\n    box-sizing : border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    transition: all 0.2s ease;\r\n  }\r\n  html {\r\n    font-size : 10px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  body {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  ul {\r\n    list-style-type: none;\r\n    padding : 0;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport GlobalStyle from \"./component/global-style\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}